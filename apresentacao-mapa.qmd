---
title: "Untitled"
format: html
editor: visual
server: shiny
---

```{r}
#| context: setup
#| include: false

library(wbstats)
library(tidyverse)
library(sf)
library(rnaturalearth)
library(gganimate)

# códigos a serem utilizados
# Exportações e Importações de Bens e Serviços (% do PIB) 
# (NE.EXP.GNFS.ZS,NE.IMP.GNFS.ZS)

my_ids <- c("Exportacao (%PIB)" = "NE.EXP.GNFS.ZS",
            "Importacao (%PIB)" = "NE.IMP.GNFS.ZS")

# extraindo dados do banco mundial
exp_imp_df <- wb_data(
  indicator = my_ids,
  country = "countries_only",
  start_date = 1980, end_date = 2023
)

# extraindo dados geoespaciais dos paises
europe_map <- ne_countries(scale = "small", type = "countries",
                          continent = "Europe") |>
  select(iso_a2, name, subregion)

# juntando exp_imp_df e world_map
exp_imp_map_eu <- exp_imp_df |>
  inner_join(europe_map, by = c("iso2c" = "iso_a2")) |>
  st_as_sf()

# utilizando Lambert Conformal Conic para o mapa da europa
exp_imp_map_lamb <- st_transform(exp_imp_map_eu, crs = 3035)


```

```{r}
#| warning: false
#| echo: false

# criando plot de mapa
p <- ggplot(exp_imp_map_lamb) +
  geom_sf(aes(fill = `Importacao (%PIB)`)) +
  labs(
    title = "{current_frame}"
  ) +
  transition_manual(date)

# ajustando o fps
animate(p, fps = 3.5)

```

```{r}
#| include: false

# extraindo dados geoespaciais dos paises
world_map <- ne_countries(scale = "small", type = "countries") |>
  select(iso_a2, name, subregion)

# juntando exp_imp_df e world_map
exp_imp_map <- exp_imp_df |>
  inner_join(world_map, by = c("iso2c" = "iso_a2")) |>
  st_as_sf()

# listando código para projeção de Robinson
robinson_code <- "+proj=robin +lon_0=0 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs +type=crs"

# utilizando Lambert Conformal Conic para o mapa da europa
exp_imp_map_proj <- st_transform(exp_imp_map, crs = robinson_code)


```

```{r}
#| warning: false
#| echo: false

# criando plot de mapa
p <- exp_imp_map_proj |>
  filter(date >= 1985,
         date <= 2000) |>
  ggplot() +
  geom_sf(aes(fill = `Importacao (%PIB)`)) +
  labs(
    title = "{current_frame}"
  ) +
  transition_manual(date)

# ajustando o fps
animate(p, fps = 10)

```

```{r}
#| context: setup
#| warning: false
#| include: false

library(bslib)

options(scipen = 999)

my_ids <- c("Exportacao (US$)" = "NE.EXP.GNFS.CD",
            "Importacao (US$)" = "NE.IMP.GNFS.CD")

# extraindo dados do banco mundial
exp_imp_df <- wb_data(
  indicator = my_ids,
  country = "countries_only",
  start_date = 1980, end_date = 2023
)

# extraindo dados geoespaciais dos paises
world_map <- ne_countries(scale = "small", type = "countries", continent = "europe") |>
  select(iso_a2, subregion, continent)

# juntando exp_imp_df e world_map
exp_imp_map <- exp_imp_df |>
  inner_join(world_map, by = c("iso2c" = "iso_a2")) |>
  select(country:continent)

```

```{r}

layout_sidebar(
  sidebar = sidebar(
    shiny::selectizeInput(
      "select_regioes",
      "regioes_destacadas",
      choices = c("Eastern Europe", "Northern Europe", "Southern Europe", "Western Europe"),
      selected = c("Eastern Europe", "Northern Europe", "Southern Europe", "Western Europe"),
      multiple = TRUE
    ),
    shiny::selectInput(
      "ano_inicial",
      "Selecione o ano inicial",
      choices = seq(1980, 2023),
      selected = 1985
    ),
    shiny::selectInput(
      "ano_final",
      "Selecione o ano",
      choices = seq(1980, 2023),
      selected = 2000
    )
  ),
  shiny::plotOutput("output_plot")
)
```

```{r}
#| context: server

output$output_plot <- shiny::renderPlot({
  exp_imp_map |>
    filter(
      subregion %in% input$select_regioes,
      date >= input$ano_inicial,
      date <= input$ano_final
    ) |>
  ggplot() +
  geom_bar(aes(fill = subregion, y = `Importacao (US$)`, x = date),
           position = "dodge", stat = "identity") 
})
```
